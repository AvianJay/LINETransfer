name: Build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  PYTHONUTF8: 1
  FLET_CLI_NO_RICH_OUTPUT: 1
  UV_NO_PROGRESS: 1

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get short Git commit hash
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Replace version and update channel in config.py
        run: |
          sed -i '' 's/app_version = ".*"/app_version = "'$COMMIT_HASH'"/' src/config.py
          sed -i '' 's/update_channel = ".*"/update_channel = "nightly"/' src/config.py

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Build macOS
        run: |
          poetry run flet build macos --verbose --no-rich-output --compile-app --compile-packages --build-version "$COMMIT_HASH"

      - name: Upload macOS
        uses: actions/upload-artifact@v4
        with:
          name: linetransfer-macos
          path: build/macos
      
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Get short Git commit hash
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Replace version and update channel in config.py
        run: |
          sed -i 's/app_version = ".*"/app_version = "'$COMMIT_HASH'"/' src/config.py
          sed -i 's/update_channel = ".*"/update_channel = "nightly"/' src/config.py

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Build Windows
        run: |
          poetry run flet build windows --verbose --no-rich-output --compile-app --compile-packages --build-version "$COMMIT_HASH"

      - name: Upload Windows
        uses: actions/upload-artifact@v4
        with:
          name: linetransfer-windows
          path: build/windows

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Get short Git commit hash
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Replace version and update channel in config.py
        run: |
          sed -i 's/app_version = ".*"/app_version = "'$COMMIT_HASH'"/' src/config.py
          sed -i 's/update_channel = ".*"/update_channel = "nightly"/' src/config.py
      
      - name: Patch for linux build
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Build Linux
        run: |
          poetry run flet build linux --verbose --no-rich-output --compile-app --compile-packages --build-version "$COMMIT_HASH"

      - name: Upload Linux
        uses: actions/upload-artifact@v4
        with:
          name: linetransfer-linux
          path: build/linux
